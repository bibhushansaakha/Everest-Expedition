---
export interface Props {
  level: number;
}

const { level } = Astro.props;

const getSicknessLevel = (level: number): string => {
  if (level < 20) return 'Mild';
  if (level < 50) return 'Moderate';
  if (level < 80) return 'Severe';
  return 'Critical';
};

const sicknessLevel = getSicknessLevel(level);
---

<div class="altitude-sickness">
  <h2>Altitude Sickness</h2>
  <div class="sickness-meter">
    <div class="sickness-bar" style={`width: ${level}%`}></div>
  </div>
  <p class="sickness-level">Level: <span class={`level-${sicknessLevel.toLowerCase()}`}>{sicknessLevel}</span></p>
  <ul class="symptoms">
    <li>Headache</li>
    <li>Dizziness</li>
    <li>Fatigue</li>
    <li>Shortness of breath</li>
    <li>Loss of appetite</li>
  </ul>
</div>

<style>
  .altitude-sickness {
    background-color: rgba(255, 255, 255, 0.8);
    border-radius: 10px;
    padding: 1rem;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  }

  h2 {
    margin-top: 0;
    margin-bottom: 1rem;
    color: #2c3e50;
    font-size: 1.5rem;
    text-align: center;
  }

  .sickness-meter {
    width: 100%;
    height: 20px;
    background-color: #ecf0f1;
    border-radius: 10px;
    overflow: hidden;
    margin-bottom: 0.5rem;
  }

  .sickness-bar {
    height: 100%;
    background-color: #e74c3c;
    transition: width 0.5s ease-in-out;
  }

  .sickness-level {
    font-size: 1.1rem;
    font-weight: bold;
    margin-bottom: 1rem;
  }

  .level-mild { color: #2ecc71; }
  .level-moderate { color: #f39c12; }
  .level-severe { color: #e67e22; }
  .level-critical { color: #e74c3c; }

  .symptoms {
    list-style-type: none;
    padding: 0;
    margin: 0;
  }

  .symptoms li {
    margin-bottom: 0.5rem;
    color: #7f8c8d;
  }

  .symptoms li::before {
    content: "â€¢";
    color: #3498db;
    display: inline-block;
    width: 1em;
    margin-left: -1em;
  }
</style>
